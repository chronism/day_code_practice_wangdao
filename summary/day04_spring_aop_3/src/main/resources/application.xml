<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/util https://www.springframework.org/schema/util/spring-util.xsd">


    <context:component-scan base-package="com.cskaoyan"/>

    <aop:config>
        <aop:pointcut id="testM" expression="execution( public * com.cs*.TestMethod.*(int))"/>
        <aop:aspect ref="customProxy">
            <aop:before method="mybefore" pointcut-ref="testM"/>
            <aop:after method="myafter" pointcut-ref="testM"/>
            <aop:around method="around" pointcut-ref="testM"/>

            <!-- after-returning 必须要有返回值 -->
            <aop:after-returning method="afterReturning" pointcut-ref="testM" returning="o"/>

            <!-- after-throwing 必须要返回一个异常  -->
            <aop:after-throwing method="afterThrowing" pointcut-ref="testM" throwing="e"/>
        </aop:aspect>
        <!-- 修饰符 方法返回类型 包名.类名.方法(参数类型) -->
    </aop:config>

</beans>